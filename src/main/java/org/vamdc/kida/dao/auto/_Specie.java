package org.vamdc.kida.dao.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.vamdc.kida.dao.Channel;
import org.vamdc.kida.dao.ChannelHasSpecie;
import org.vamdc.kida.dao.ChannelValue;
import org.vamdc.kida.dao.SpecieHasElement;
import org.vamdc.kida.dao.ThreeBodyChannelHasSpecie;
import org.vamdc.kida.dao.ThreeBodyReactionHasReactant;

/**
 * Class _Specie was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Specie extends CayenneDataObject {

    public static final String APPLICATION_PROPERTY = "application";
    public static final String CAS_PROPERTY = "cas";
    public static final String CHARGE_PROPERTY = "charge";
    public static final String COMMON_NAME_PROPERTY = "commonName";
    public static final String CREATED_AT_PROPERTY = "createdAt";
    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String ELECTRONIC_STATE_PROPERTY = "electronicState";
    public static final String EXCITATION_PROPERTY = "excitation";
    public static final String FORMULA_PROPERTY = "formula";
    public static final String ID_PROPERTY = "id";
    public static final String INCHI_PROPERTY = "inchi";
    public static final String INCHI_KEY_PROPERTY = "inchiKey";
    public static final String MOL_FILE_PROPERTY = "molFile";
    public static final String MULTIPLICITY_PROPERTY = "multiplicity";
    public static final String NUM_PROPERTY = "num";
    public static final String ROTATION_LEVEL_PROPERTY = "rotationLevel";
    public static final String STRUCTURE_PROPERTY = "structure";
    public static final String UPDATED_AT_PROPERTY = "updatedAt";
    public static final String VIBRATION_LEVEL_PROPERTY = "vibrationLevel";
    public static final String CHANNEL_PROPERTY = "channel";
    public static final String CHANNEL_HAS_SPECIES_PROPERTY = "channelHasSpecies";
    public static final String CHANNEL_VALUES_PROPERTY = "channelValues";
    public static final String SPECIE_HAS_ELEMENTS_PROPERTY = "specieHasElements";
    public static final String THREE_BODY_CHANNEL_HAS_SPECIES_PROPERTY = "threeBodyChannelHasSpecies";
    public static final String THREE_BODY_REACTION_HAS_REACTANTS_PROPERTY = "threeBodyReactionHasReactants";

    public static final String ID_PK_COLUMN = "id";

    public void setApplication(String application) {
        writeProperty("application", application);
    }
    public String getApplication() {
        return (String)readProperty("application");
    }

    public void setCas(String cas) {
        writeProperty("cas", cas);
    }
    public String getCas() {
        return (String)readProperty("cas");
    }

    public void setCharge(Integer charge) {
        writeProperty("charge", charge);
    }
    public Integer getCharge() {
        return (Integer)readProperty("charge");
    }

    public void setCommonName(String commonName) {
        writeProperty("commonName", commonName);
    }
    public String getCommonName() {
        return (String)readProperty("commonName");
    }

    public void setCreatedAt(Date createdAt) {
        writeProperty("createdAt", createdAt);
    }
    public Date getCreatedAt() {
        return (Date)readProperty("createdAt");
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setElectronicState(String electronicState) {
        writeProperty("electronicState", electronicState);
    }
    public String getElectronicState() {
        return (String)readProperty("electronicState");
    }

    public void setExcitation(String excitation) {
        writeProperty("excitation", excitation);
    }
    public String getExcitation() {
        return (String)readProperty("excitation");
    }

    public void setFormula(String formula) {
        writeProperty("formula", formula);
    }
    public String getFormula() {
        return (String)readProperty("formula");
    }

    public void setId(Integer id) {
        writeProperty("id", id);
    }
    public Integer getId() {
        return (Integer)readProperty("id");
    }

    public void setInchi(String inchi) {
        writeProperty("inchi", inchi);
    }
    public String getInchi() {
        return (String)readProperty("inchi");
    }

    public void setInchiKey(String inchiKey) {
        writeProperty("inchiKey", inchiKey);
    }
    public String getInchiKey() {
        return (String)readProperty("inchiKey");
    }

    public void setMolFile(String molFile) {
        writeProperty("molFile", molFile);
    }
    public String getMolFile() {
        return (String)readProperty("molFile");
    }

    public void setMultiplicity(Integer multiplicity) {
        writeProperty("multiplicity", multiplicity);
    }
    public Integer getMultiplicity() {
        return (Integer)readProperty("multiplicity");
    }

    public void setNum(Integer num) {
        writeProperty("num", num);
    }
    public Integer getNum() {
        return (Integer)readProperty("num");
    }

    public void setRotationLevel(Float rotationLevel) {
        writeProperty("rotationLevel", rotationLevel);
    }
    public Float getRotationLevel() {
        return (Float)readProperty("rotationLevel");
    }

    public void setStructure(String structure) {
        writeProperty("structure", structure);
    }
    public String getStructure() {
        return (String)readProperty("structure");
    }

    public void setUpdatedAt(Date updatedAt) {
        writeProperty("updatedAt", updatedAt);
    }
    public Date getUpdatedAt() {
        return (Date)readProperty("updatedAt");
    }

    public void setVibrationLevel(String vibrationLevel) {
        writeProperty("vibrationLevel", vibrationLevel);
    }
    public String getVibrationLevel() {
        return (String)readProperty("vibrationLevel");
    }

    public void addToChannel(Channel obj) {
        addToManyTarget("channel", obj, true);
    }
    public void removeFromChannel(Channel obj) {
        removeToManyTarget("channel", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Channel> getChannel() {
        return (List<Channel>)readProperty("channel");
    }


    public void addToChannelHasSpecies(ChannelHasSpecie obj) {
        addToManyTarget("channelHasSpecies", obj, true);
    }
    public void removeFromChannelHasSpecies(ChannelHasSpecie obj) {
        removeToManyTarget("channelHasSpecies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ChannelHasSpecie> getChannelHasSpecies() {
        return (List<ChannelHasSpecie>)readProperty("channelHasSpecies");
    }


    @SuppressWarnings("unchecked")
    public List<ChannelValue> getChannelValues() {
        return (List<ChannelValue>)readProperty("channelValues");
    }


    public void addToSpecieHasElements(SpecieHasElement obj) {
        addToManyTarget("specieHasElements", obj, true);
    }
    public void removeFromSpecieHasElements(SpecieHasElement obj) {
        removeToManyTarget("specieHasElements", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SpecieHasElement> getSpecieHasElements() {
        return (List<SpecieHasElement>)readProperty("specieHasElements");
    }


    public void addToThreeBodyChannelHasSpecies(ThreeBodyChannelHasSpecie obj) {
        addToManyTarget("threeBodyChannelHasSpecies", obj, true);
    }
    public void removeFromThreeBodyChannelHasSpecies(ThreeBodyChannelHasSpecie obj) {
        removeToManyTarget("threeBodyChannelHasSpecies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ThreeBodyChannelHasSpecie> getThreeBodyChannelHasSpecies() {
        return (List<ThreeBodyChannelHasSpecie>)readProperty("threeBodyChannelHasSpecies");
    }


    public void addToThreeBodyReactionHasReactants(ThreeBodyReactionHasReactant obj) {
        addToManyTarget("threeBodyReactionHasReactants", obj, true);
    }
    public void removeFromThreeBodyReactionHasReactants(ThreeBodyReactionHasReactant obj) {
        removeToManyTarget("threeBodyReactionHasReactants", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ThreeBodyReactionHasReactant> getThreeBodyReactionHasReactants() {
        return (List<ThreeBodyReactionHasReactant>)readProperty("threeBodyReactionHasReactants");
    }


}
